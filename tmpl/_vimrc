set nocompatible

set encoding=utf-8 nobomb

set modeline
set modelines=5

if filereadable(expand("~/.vim/autoload/pathogen.vim"))
    runtime! autoload/pathogen.vim
    if exists("g:loaded_pathogen")
       execute pathogen#infect()
    endif
endif

if has("autocmd")
    filetype on
    filetype indent on
    filetype plugin on

    set expandtab
    set softtabstop=4
    set tabstop=8

    augroup configgroup
        autocmd!
        autocmd VimEnter * highlight clear SignColumn
        autocmd FileType go     setlocal noexpandtab
        autocmd FileType python setlocal expandtab
        autocmd FileType python setlocal shiftwidth=4
        autocmd FileType python setlocal softtabstop=4
        autocmd FileType python setlocal tabstop=8
        autocmd FileType make   setlocal noexpandtab
        autocmd BufEnter *.sh setlocal tabstop=2
        autocmd BufEnter *.sh setlocal shiftwidth=2
        autocmd BufEnter *.sh setlocal softtabstop=2
    augroup END
endif

if has("cmdline_info")
    set ruler
    set showcmd
    set showmode
endif

if has("folding")
    set foldenable
    set foldlevelstart=10
    set foldmethod=indent
    set foldnestmax=10
    nnoremap <space> za
endif

if has("extra_search")
    set hlsearch
    set incsearch
    set ignorecase
    set smartcase
endif

if has('statusline')
    set laststatus=2
    set statusline=%<%f
    set statusline+=\ %w%h%m%r
    set statusline+=\ [%{getcwd()}]
    set statusline+=%=%-8.(%B%)\ %-10.(%l,%c%V%)\ %p%%
endif

if has("syntax")
    colorschem desert
    syntax enable
    "set t_Co=256
    set bg=dark
    set cursorline
endif

if has("wildmenu")
    set wildmenu
    set wildmode=longest,list
endif

au FileType json setlocal equalprg=python\ -m\ json.tool
com! FormatJSON %!python -m json.tool

let mapleader=","
nnoremap j gj
nnoremap k gk
nnoremap <leader>s :mksession<CR>

" NERDTree
let NERDTreeIgnore = ['\.pyc$', 'venv', 'dist']

" Syntastic
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" vim-go
" go get -u github.com/axw/gocov/gocov
" go get -u golang.org/x/tools/cmd/goimports
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
